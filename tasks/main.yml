---
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      skip: true
      paths:
        - 'vars'

- name: Include OS-specific tasks.
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
      - tasks/"{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - tasks/"{{ ansible_distribution }}.yml"
      - tasks/"{{ ansible_os_family }}.yml"
      skip: true

- name: Update cache and install related packages for Alpine based systems
  community.general.apk:
    name:
      - "{{ ntp_package }}"
      - "{{ ntp_tzdata_package }}"
    update_cache: yes
    state: present
  when: ansible_os_family == "Alpine"

- name: Update cache and install related packages for Debian based systems
  ansible.builtin.apt:
    name:
      - "{{ ntp_package }}"
      - "{{ ntp_tzdata_package }}"
    update_cache: yes
    state: present
  when: ansible_os_family == "Debian"

- name: Make sure ntp and chrony is not in conflict in CentOS like systems
  ansible.builtin.yum:
    name:
      - ntp
    state: absent
  when: ansible_os_family == "RedHat"

- name: Update cache and install related packages for CentOS based systems
  ansible.builtin.yum:
    name:
      - "{{ ntp_package }}"
      - "{{ ntp_tzdata_package }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Set timezone in Linux like OS
  community.general.timezone:
    name: "{{ ntp_timezone }}"

- name: Ensure NTP is running and enabled as configured.
  ansible.builtin.service:
    name: "{{ ntp_daemon }}"
    state: started
    enabled: true
  when: ntp_enabled | bool

- name: Ensure NTP sync on start is enabled for FreeBSD
  community.general.sysrc:
    name: ntpd_sync_on_start
    value: "YES"
  when: ansible_os_family == "FreeBSD"

- name: Ensure NTP is stopped and disabled as configured.
  ansible.builtin.service:
    name: "{{ ntp_daemon }}"
    state: stopped
    enabled: false
  when: not (ntp_enabled | bool)

- name: Generate configuration file
  ansible.builtin.template:
    src: "{{ lookup('first_found', params) }}"
    dest: "/etc/{{ ntp_package }}.conf"
    mode: 0644
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.{{ ntp_package }}.conf.j2"
        - "{{ ansible_distribution }}.{{ ntp_package }}.conf.j2"
        - "{{ ansible_os_family }}.{{ ntp_package }}.conf.j2"
        - "{{ ntp_package }}.conf.j2"
      paths:
        - 'templates'
  tags: template-ntp-config
  notify: Restart ntp
